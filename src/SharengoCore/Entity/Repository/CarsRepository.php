<?php

namespace SharengoCore\Entity\Repository;

use Doctrine\ORM\Query\ResultSetMappingBuilder;

/**
 * CarsRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CarsRepository extends \Doctrine\ORM\EntityRepository
{
    public function getTotalCars()
    {
        $em = $this->getEntityManager();
        $query = $em->createQuery('SELECT COUNT(c.plate) FROM \SharengoCore\Entity\Cars c');
        return $query->getSingleScalarResult();
    }

    public function findCarsEligibleForAlarmCheck()
    {
        $em = $this->getEntityManager();

        $dql = "SELECT c
        FROM \SharengoCore\Entity\Cars c
        WHERE NOT EXISTS
        (SELECT 1
        FROM \SharengoCore\Entity\Trips t
        WHERE t.car = c
        AND t.timestampEnd is null)";

        $query = $em->createQuery($dql);

        return $query->getResult();
    }

    public function findPublicCars()
    {
        $em = $this->getEntityManager();

        $dql = "SELECT c
        FROM \SharengoCore\Entity\Cars c
        WHERE c.status = 'operative'
        AND c.active = true
        AND c.hidden = false
        AND c.longitude != 0
        AND c.latitude != 0";

        $query = $em->createQuery($dql);

        return $query->getResult();
    }

    public function isCarOutOfBounds($car)
    {
        $em = $this->getEntityManager();

        $sql = 'SELECT c
            FROM cars c, zones z
            WHERE c.plate = :car
            AND z.name = \'MI\'
            AND z.geo @> point(c.longitude, c.latitude)';

        $sql = 'SELECT c.plate
            FROM cars c
            WHERE c.plate = :car';

        $rsm = new ResultSetMappingBuilder($em);
        $rsm->addRootEntityFromClassMetadata('SharengoCore\Entity\Cars', 'c');

        $query = $em->createNativeQuery($sql, $rsm);
        $query->setParameter('car', $car->getPlate());

        $users = $query->getResult();
    }

}
