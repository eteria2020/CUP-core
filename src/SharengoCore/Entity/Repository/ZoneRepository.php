<?php 

namespace SharengoCore\Entity\Repository;

// Externals
use Doctrine\ORM\EntityRepository;
use Doctrine\ORM\Query\ResultSetMapping;

/**
 * ZoneRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class ZoneRepository extends EntityRepository
{
    /**
     * This method return an array of record with the zones rapresented as
     * GeoJSON type.
     *
     * @return array
     */
    public function findZonesWithMapCoords($showHidden, $showOnlyActive) {
        $em = $this->getEntityManager();

        $dql = 'SELECT
                    z.id,
                    z.name,
                    ST_AsGeoJson(z.areaInvoice) AS areaInvoice,
                    ST_AsGeoJson(z.areaUse) AS areaUse 
                FROM \SharengoCore\Entity\Zone z ';

        $where = '';
        if (!$showHidden) {
            $whereCondition = true;
            $where = ' WHERE z.hidden = FALSE';
        }
        if ($showOnlyActive) {
            if ($whereCondition) {
                $where .= ' AND';
            } else {
                $where = ' WHERE';
            }
            $where .= ' z.active = TRUE';
        }

        $query = $em->createQuery($dql.$where);

        return $query->getResult();
    }

    /**
     * This method return an the number of zones
     *
     * @return int
     */
    public function getTotalZones() {
        $em = $this->getEntityManager();
        $query = $em->createQuery('SELECT COUNT(z.id) FROM \SharengoCore\Entity\Zone z');
        return $query->getSingleScalarResult();
    }
}